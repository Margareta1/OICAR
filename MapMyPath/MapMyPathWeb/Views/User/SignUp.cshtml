@model MapMyPathLib.AppUser

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <meta name="viewport" content="width=device-width" />
    <title>SignUp</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="container h-100 mt-5 ">
            <div class="row h-100 justify-content-center align-items-center ">
                <div class="form-horizontal col-lg-3 shadow p-3 mb-5 bg-white rounded  d-flex flex-column justify-content-center align-items-center">
                    <img src="~/images/logo.png" width="150" height="150" />
                    <h4 class="text-center mt-3 mb-4">Welcome! </h4>

                    <div class="form-group">
                        <div class="container">
                            <div class="row">
                                <div class="col-md-30 col">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new {@placeholder = "First name", @class = "form-control  col-md-10 shadow-sm p-3 mb-5 bg-white rounded" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>

                                <div class="col-md-30 col">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new {@placeholder = "Last name", @class = "form-control  col-md-10 shadow-sm p-3 mb-5 bg-white rounded", } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>

                   
                        <div class="col-md-12 col">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new {@placeholder = "Username", @class = "form-control  col-md-10 shadow-sm p-3 mb-5 bg-white rounded" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                  
                        <div class="col-md-12 col">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new {@placeholder = "Password", @class = "form-control  col-md-10 shadow-sm p-3 mb-5 bg-white roundedl", Type = "password" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    </div>
                    </div>


                    <div class="form-group  text-center">
                        <div class="mt-1">
                            <input type="submit" value="Sign up" class="btn btn-primary btn-lg" style="background-color: #023e8a" />
                        </div>
                        <div class="mt-3">
                            Already a member?  @Html.ActionLink("Sign in!", "SignIn", "User", null, new {@class = "text-decoration-none"})
                        </div>
                        <div class="mt-3">
                            Or @Html.ActionLink("continue ", "Index", "Home",null, new {@class = "text-decoration-none"})without registration!
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
</body>
</html>
